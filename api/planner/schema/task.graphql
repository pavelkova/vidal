type TaskCard {
  main: Task!
  description: String
  comments: [Comment]
  tasks: [Task]
  # links
  # attachments
  # images
}

type Link {
  card: TaskCard
  title: String
  url: String!
}

type Task {
  title: String!
  project: Project!
  status: String
  repeatable: Boolean
  scheduled: CalendarEntry
  due: CalendarEntry
  parent: Task
  subtasks: [Task]
  position: Int
}



type TaskLog {
}

type Query {
  getTaskCard(id: ID!): TaskCard
  allTaskCards: [TaskCard]
  getTask(id: ID!): Task
  allTasks: [Task]
  projectByName(title: String!): Project!
}

type TaskInput {
}

type Mutation {
  createTaskCard(): TaskCard
  addTaskToCard(title: String!, status: String, project: Project!, is_repeatable: Boolean): Task!
  updateTaskStatus(id: ID!, status: String)
  addProject(title: String!): Project!
}
