type Page {
  title: String!
}

type Card {
}

type Query {
}

type Mutation {
  createPage(title: String!): Page!

}

# add film to library
# add film to watch list
# mark film as watched

# media (gallery)
# task (list/tree)
# note/content
# link

# TEMPLATES
# clipped web page
## content
## properties: author, date published, title,
# film
## title, director, year, language, country, starring
# book
## title, author, publisher, year, language, file, goodreads link
# recipe

# exercise

# quote - formatted content, quote + inline reference or link + properties: title, author

type MediaGalleryItem {
  mimeType: String!
  url: String!
  title: String!
  description: String
  position: Int!
}

type MediaGallery {
  title: String!
  items: [MediaGalleryItem]
}

type CodeBlock {
  syntax: String
  content: String
}

type Task {
  status: String!
  title: String!
  subtasks: [Task]
}

type CalendarEntry {
  start: DateTime
  end: EndTime
  location: [Place]
  
}

type MovieInput {
  title: String!
  year: Int
  imdb_url: String
}

type Query {
  getAllTasks: [Task]
  getTask(id: ID!): Task
  getTasksByProject(): [Task]
  getDueTasks(): [Task]
  getOverDueTasks(): [Task]
  getScheduledTasks(): [Task]
  getAllDateTasks(): [Task]

  
}

type Mutation {
  createTask
  updateTask
  setTaskScheduled
  setTaskDue

  createHabit
  updateHabit
  createHabitLog
  updateHabitLog

  createTimeLog
  updateTimeLog

  uploadImage(image: Upload!): Boolean!
  uploadVideo(video: Upload!): Boolean!
  uploadAudio(audio: Upload!): Boolean!
  uploadDocument(document: Upload!): Boolean!

  addImageUrl(url: String!): Boolean!
  addVideoUrl(url: String!): Boolean!
  addAudioUrl(url: String!): Boolean!
  addDocumentUrl(url: String!): Boolean!

  createPageReference(): Reference
  createCardReference():
}
